{"version":3,"sources":["./src/app/shared/ngx-mask-integration/index.ts","./src/environments/environment.ts","./src/app/shared/validators/date.validator.ts","./src/app/shared/index.ts","./src/app/shared/shared.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shared/ngx-mask-integration/ngx-mask-integration.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export * from './ngx-mask-integration.module';\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\n\nexport class DateValidator {\n  static min(date: string): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const inputDate: Date = new Date(control.value);\n      const minDate: Date = new Date(date);\n      if (minDate <= inputDate) {\n        return null;\n      } else {\n        const timezoneOffset = minDate.getTimezoneOffset() / 60;\n        const minDateWithTimezone = new Date(Date.UTC(minDate.getFullYear(), minDate.getMonth() + 1, 1, timezoneOffset, 0, 0));\n        return { minDate: { min: minDateWithTimezone, actual: inputDate } };\n      }\n    };\n  }\n  static max(date: string): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const inputDate: Date = new Date(control.value);\n      const maxDate: Date = new Date(date);\n      if (maxDate >= inputDate) {\n        return null;\n      } else {\n        const timezoneOffset = maxDate.getTimezoneOffset() / 60;\n        const maxDateWithTimezone = new Date(Date.UTC(maxDate.getFullYear(), maxDate.getMonth() + 1, 1, timezoneOffset, 0, 0));\n        return { maxDate: { max: maxDateWithTimezone, actual: inputDate } };\n      }\n    };\n  }\n}\n","export * from './shared.module';\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxMaskIntegrationModule } from './ngx-mask-integration';\n\n@NgModule({\n  imports: [CommonModule, NgxMaskIntegrationModule],\n  exports: [CommonModule, ReactiveFormsModule, FormsModule, NgxMaskIntegrationModule],\n})\nexport class SharedModule {}\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DateValidator } from '@app/shared/validators/date.validator';\nimport { combineLatest, Observable } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\nimport { MonthPickerValue, Summary } from './app.model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  summary$: Observable<Summary>;\n  goalForm: FormGroup;\n  dateMin: string;\n  dateMax: string;\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.setMonthPickerMinAndMaxValues();\n    this.buildForm();\n  }\n  private setMonthPickerMinAndMaxValues(): void {\n    const initialValue = this.getMonthPickerInitialValue();\n    this.dateMin = `${initialValue.year}-${initialValue.month}`;\n    this.dateMax = `${+initialValue.year + 100}-12`;\n  }\n  private getMonthPickerInitialValue(): MonthPickerValue {\n    const now = new Date();\n    const year = now.getFullYear().toString();\n    const currentMonth = now.getMonth() + 2;\n    const month = currentMonth < 10 ? `0${currentMonth}` : `${currentMonth}`;\n    return {\n      year,\n      month,\n    };\n  }\n  private buildForm(): void {\n    const initialValue = this.getMonthPickerInitialValue();\n    this.goalForm = this.fb.group({\n      amount: ['', [Validators.required]],\n      deadline: [\n        `${initialValue.year}-${initialValue.month}`,\n        [Validators.required, DateValidator.min(this.dateMin), DateValidator.max(this.dateMax)],\n      ],\n    });\n    this.bindForm();\n  }\n  private bindForm(): void {\n    const $amount = this.goalForm.get('amount').valueChanges;\n    const $deadline = this.goalForm.get('deadline').valueChanges;\n    $amount.pipe(first()).subscribe(() => {\n      const amountField = this.goalForm.get('deadline');\n      amountField.setValue(amountField.value);\n    });\n    this.summary$ = combineLatest([$amount, $deadline]).pipe(\n      map(([amount, deadline]: [string, string]) => {\n        const timeZoneOffset = new Date().getTimezoneOffset() / 60;\n        const splitedDeadline = deadline.split('-').map((dateFragment) => +dateFragment);\n        return this.getSummary(+amount, new Date(Date.UTC(splitedDeadline[0], splitedDeadline[1] - 1, 1, timeZoneOffset, 0, 0)));\n      })\n    );\n  }\n  private getSummary(goalAmount: number, goalDeadline: Date): Summary {\n    const remainingMonths = this.getRemainingMonths(goalDeadline);\n    const monthlyAmount = goalAmount / remainingMonths;\n    return {\n      goalAmount,\n      goalDeadline,\n      monthlyAmount,\n      remainingMonths,\n    };\n  }\n  private getRemainingMonths(goalDeadline: Date): number {\n    const now = new Date();\n    const years = goalDeadline.getFullYear() - now.getFullYear();\n    const months = years * 12 + (goalDeadline.getMonth() - now.getMonth());\n    return months > 0 ? months : 1;\n  }\n  skipMonth(amount: number): void {\n    const deadlineField = this.goalForm.get('deadline');\n    const currentDate = new Date(deadlineField.value);\n    const timeZoneOffset = new Date().getTimezoneOffset() / 60;\n    const newDate = new Date(Date.UTC(currentDate.getFullYear(), currentDate.getMonth() + 1 + amount, 1, timeZoneOffset, 0, 0));\n    const newMonth = newDate.getMonth() + 1;\n    const formatedNewMonth = newMonth < 10 ? `0${newMonth}` : `${newMonth}`;\n    deadlineField.setValue(`${newDate.getFullYear()}-${formatedNewMonth}`);\n  }\n  submitGoal(): void {\n    if (this.goalForm.valid) {\n      console.log('done');\n    }\n  }\n}\n","<header>\n  <a href=\"/\"><img alt=\"Origin\" src=\"./assets/icons/logo.svg\" role=\"button\" aria-label=\"Origin\" /></a>\n</header>\n<main>\n  <h1>Let's plan your <strong>saving goal</strong>.</h1>\n  <div class=\"card\">\n    <img src=\"./assets/icons/house.svg\" alt=\"Goal icon\" />\n    <h2>Buy a house</h2>\n    <h3>Saving goal</h3>\n    <form [formGroup]=\"goalForm\" (ngSubmit)=\"submitGoal()\">\n      <div class=\"form-field\">\n        <label for=\"amount\">Total amount</label>\n        <button type=\"button\" class=\"prefix\">$</button>\n        <input type=\"text\" name=\"amount\" formControlName=\"amount\" inputmode=\"numeric\" autocomplete=\"off\" mask=\"separator.2\" />\n        <span class=\"errors\" *ngIf=\"goalForm.get('amount').invalid && (goalForm.get('amount').dirty || goalForm.get('amount').touched)\">\n          <span *ngIf=\"goalForm.get('amount').hasError('required')\"> This field is required. </span>\n        </span>\n      </div>\n      <div class=\"form-field\">\n        <label for=\"deadline\">Reach goal by</label>\n        <button type=\"button\" class=\"prefix action-button\" (click)=\"skipMonth(-1)\">\n          <img src=\"./assets/icons/arrow.svg\" alt=\"Previous month\" />\n        </button>\n        <button type=\"button\" class=\"sufix action-button\" (click)=\"skipMonth(1)\">\n          <img src=\"./assets/icons/arrow.svg\" alt=\"Next month\" />\n        </button>\n        <input type=\"month\" [min]=\"dateMin\" [max]=\"dateMax\" name=\"deadline\" formControlName=\"deadline\" />\n        <span class=\"errors\" *ngIf=\"goalForm.get('deadline').invalid\">\n          <span *ngIf=\"goalForm.get('deadline').hasError('required')\"> This field is required. </span>\n          <span *ngIf=\"goalForm.get('deadline').hasError('minDate')\">\n            Date should be greater or equal than {{ goalForm.get('deadline').getError('minDate').min | date: 'MMMM yyyy' }}.\n          </span>\n          <span *ngIf=\"goalForm.get('deadline').hasError('maxDate')\">\n            Date should not be greater than {{ goalForm.get('deadline').getError('maxDate').max | date: 'MMMM yyyy' }}.\n          </span>\n        </span>\n      </div>\n      <div class=\"summary\" *ngIf=\"summary$ | async as summary\">\n        <strong>Monthly <span>amount</span></strong>\n        <span [title]=\"summary.monthlyAmount | currency: 'USD':'symbol':'1.2-6'\">\n          <ng-container *ngIf=\"summary.monthlyAmount >= 1; else decimals\">\n            {{ summary.monthlyAmount | currency: 'USD':'symbol':'1.0-2' }}\n          </ng-container>\n          <ng-template #decimals>\n            {{ summary.monthlyAmount | currency: 'USD':'symbol':'1.2-6' }}\n          </ng-template>\n        </span>\n        <p>\n          You're planning <strong>{{ summary.remainingMonths }} monthly deposits</strong> to reach your\n          <strong>{{ summary.goalAmount | currency: 'USD':'symbol':'1.0-2' }}</strong> goal by\n          <strong>{{ summary.goalDeadline | date: 'MMMM yyyy' }}.</strong>\n        </p>\n      </div>\n      <button type=\"submit\" [disabled]=\"goalForm.invalid\">Confirm</button>\n    </form>\n  </div>\n</main>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { SharedModule } from './shared';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, SharedModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { IConfig, NgxMaskModule } from 'ngx-mask';\n\nexport const options: Partial<IConfig> | (() => Partial<IConfig>) = {\n  thousandSeparator: ',',\n};\n\n@NgModule({\n  imports: [NgxMaskModule.forRoot(options)],\n  exports: [NgxMaskModule],\n})\nexport class NgxMaskIntegrationModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}